/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package gui;

import dao.ArticleDAO;
import dao.UserDAO;
import entities.Article;
import entities.User;
import java.awt.Color;
import java.awt.Font;
import java.io.File;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Collection;
import java.util.Collections;
import java.sql.Date;
import java.text.ParseException;
import java.util.HashSet;
import java.util.Iterator;
import java.util.List;
import java.util.Set;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartFrame;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.ChartRenderingInfo;
import org.jfree.chart.ChartUtilities;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.entity.StandardEntityCollection;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.Plot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.general.DefaultPieDataset;

/**
 *
 * @author DELL
 */
public class Stat_f extends javax.swing.JFrame {
    String strAdm="";
    String strPed="";
    String strSimUser="";
    String strForum="";
    /**
     * Creates new form Stat_f
     */
    public Stat_f() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jCalendar1 = new com.toedter.calendar.JCalendar();
        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        jCheckBox3 = new javax.swing.JCheckBox();
        jCheckBox4 = new javax.swing.JCheckBox();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jDateChooser2 = new com.toedter.calendar.JDateChooser();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jRadioButton3 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jRadioButton1 = new javax.swing.JRadioButton();
        jLabel8 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        jComboBoxCritere = new javax.swing.JComboBox();
        jButton1 = new javax.swing.JButton();
        jLabel23 = new javax.swing.JLabel();
        jDateChooserVisible = new com.toedter.calendar.JDateChooser();
        jPanel4 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jComboBoxArticle = new javax.swing.JComboBox();
        jPanel15 = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jSpinnerPartage2 = new javax.swing.JSpinner();
        jLabel10 = new javax.swing.JLabel();
        jSpinnerPartage1 = new javax.swing.JSpinner();
        jLabel11 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jSpinnerVisite2 = new javax.swing.JSpinner();
        jLabel14 = new javax.swing.JLabel();
        jSpinnerVisite1 = new javax.swing.JSpinner();
        jLabel22 = new javax.swing.JLabel();
        jSpinnerVisible = new javax.swing.JSpinner();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Statistiques des utilisateurs"));

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Crit√®res de recherche"));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("Type");

        jCheckBox1.setBackground(new java.awt.Color(255, 255, 255));
        jCheckBox1.setText("Parent");
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        jCheckBox2.setBackground(new java.awt.Color(255, 255, 255));
        jCheckBox2.setText("Administrateur");
        jCheckBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox2ActionPerformed(evt);
            }
        });

        jCheckBox3.setBackground(new java.awt.Color(255, 255, 255));
        jCheckBox3.setText("Pediatre");
        jCheckBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox3ActionPerformed(evt);
            }
        });

        jCheckBox4.setBackground(new java.awt.Color(255, 255, 255));
        jCheckBox4.setText("Administrateur forum");
        jCheckBox4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox4ActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setText("Date de naissance");

        jLabel5.setText("Entre");

        jLabel6.setText("et");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel7.setText("Sexe");

        jRadioButton3.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup1.add(jRadioButton3);
        jRadioButton3.setText("Tous");
        jRadioButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton3ActionPerformed(evt);
            }
        });

        jRadioButton2.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup1.add(jRadioButton2);
        jRadioButton2.setText("Femme");

        jRadioButton1.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup1.add(jRadioButton1);
        jRadioButton1.setText("Homme");
        jRadioButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton1ActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel8.setText("Nationalite");

        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(81, 81, 81)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jCheckBox1)
                            .addComponent(jCheckBox2)
                            .addComponent(jCheckBox3)
                            .addComponent(jCheckBox4)))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel8)
                            .addComponent(jLabel7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jRadioButton1)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jDateChooser2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jRadioButton2)
                            .addComponent(jRadioButton3)
                            .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jCheckBox2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBox4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBox1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBox3)
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel5Layout.createSequentialGroup()
                            .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(0, 0, Short.MAX_VALUE))
                        .addGroup(jPanel5Layout.createSequentialGroup()
                            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel6)
                                .addComponent(jDateChooser2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4)
                        .addComponent(jLabel5)))
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jRadioButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jRadioButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jRadioButton3)
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addContainerGap())
        );

        jLabel3.setText("Crit√®re principale ");

        jComboBoxCritere.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Choisir crit√®re...", "Type", "Date de naissance", "Sexe", "Nationalite" }));
        jComboBoxCritere.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxCritereActionPerformed(evt);
            }
        });

        jButton1.setText("G√©n√©rer des statistiques");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel23.setText("Il faut choisir une valeur de separation pour la date");
        jLabel23.setEnabled(false);

        jDateChooserVisible.setEnabled(false);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel23)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jDateChooserVisible, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBoxCritere, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jComboBoxCritere, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel23)
                    .addComponent(jDateChooserVisible, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addComponent(jButton1)
                .addContainerGap())
        );

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Statistique des articles"));

        jButton2.setText("G√©n√©rer des statistiques");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel9.setText("Crit√©re principale ");

        jComboBoxArticle.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Choisir crit√©re...", "Nombre de partages", "Nombre de visites", "Note" }));
        jComboBoxArticle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxArticleActionPerformed(evt);
            }
        });

        jPanel15.setBackground(new java.awt.Color(255, 255, 255));
        jPanel15.setBorder(javax.swing.BorderFactory.createTitledBorder("Crit√®res de recherches"));

        jLabel18.setText("Entre");

        jLabel19.setText("et");

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel10.setText("Nombre de partage");

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel11.setText("Nombre de visite");

        jLabel15.setText("Entre");

        jLabel14.setText("et");

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel15Layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel18))
                    .addGroup(jPanel15Layout.createSequentialGroup()
                        .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel15Layout.createSequentialGroup()
                                .addGap(127, 127, 127)
                                .addComponent(jLabel15))
                            .addComponent(jLabel11))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jSpinnerPartage2, javax.swing.GroupLayout.DEFAULT_SIZE, 51, Short.MAX_VALUE)
                    .addComponent(jSpinnerVisite2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel15Layout.createSequentialGroup()
                        .addComponent(jLabel14)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSpinnerVisite1))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel15Layout.createSequentialGroup()
                        .addComponent(jLabel19)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSpinnerPartage1, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(1, 1, 1))
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(jLabel19)
                    .addComponent(jSpinnerPartage2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10)
                    .addComponent(jSpinnerPartage1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(jLabel15)
                    .addComponent(jSpinnerVisite2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14)
                    .addComponent(jSpinnerVisite1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20))
        );

        jLabel22.setText("Il faut choisir une valeur de separation");

        jSpinnerVisible.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinnerVisibleStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton2)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jPanel15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel4Layout.createSequentialGroup()
                            .addComponent(jLabel22)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jSpinnerVisible))
                        .addGroup(jPanel4Layout.createSequentialGroup()
                            .addComponent(jLabel9)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jComboBoxArticle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jComboBoxArticle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jPanel15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22)
                    .addComponent(jSpinnerVisible, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 412, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 732, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButton1ActionPerformed

    private void jComboBoxCritereActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxCritereActionPerformed
        if(jComboBoxCritere.getSelectedIndex()==1){
            jLabel2.setEnabled(false);
            //decelectionner
            jCheckBox1.setSelected(false);
            jCheckBox2.setSelected(false);
            jCheckBox3.setSelected(false);
            jCheckBox4.setSelected(false);
            strAdm="";
            strPed="";
            strSimUser="";
            strForum="";
           jCheckBox1.setEnabled(false);
           jCheckBox2.setEnabled(false);
           jCheckBox3.setEnabled(false);
           jCheckBox4.setEnabled(false);
            }
        else{
            jLabel2.setEnabled(true);
            jCheckBox1.setEnabled(true);
           jCheckBox2.setEnabled(true);
           jCheckBox3.setEnabled(true);
           jCheckBox4.setEnabled(true);
            }
        if(jComboBoxCritere.getSelectedIndex()==2){
            strAdm="";
            strPed="";
            strSimUser="";
            strForum="";
          jLabel4.setEnabled(false);
          jLabel5.setEnabled(false);
          jLabel6.setEnabled(false);
          jDateChooser1.setEnabled(false);
          jDateChooser2.setEnabled(false);
          jLabel23.setEnabled(true);
          jDateChooserVisible.setEnabled(true);
            }
        else{
            
            jLabel4.setEnabled(true);
            jLabel5.setEnabled(true);
            jLabel6.setEnabled(true);
            jDateChooser1.setEnabled(true);
            jDateChooser2.setEnabled(true);
            jLabel23.setEnabled(false);
          jDateChooserVisible.setEnabled(false);
            }
        if(jComboBoxCritere.getSelectedIndex()==3){
            strAdm="";
            strPed="";
            strSimUser="";
            strForum="";
            jLabel7.setEnabled(false);
            
            jRadioButton3.setSelected(true);
            
            jRadioButton1.setEnabled(false);
            jRadioButton2.setEnabled(false);
            jRadioButton3.setEnabled(false);
            }
        else{
            jLabel7.setEnabled(true);
            jRadioButton1.setEnabled(true);
            jRadioButton2.setEnabled(true);
            jRadioButton3.setEnabled(true);
            }
        if(jComboBoxCritere.getSelectedIndex()==4){
            strAdm="";
            strPed="";
            strSimUser="";
            strForum="";
          jLabel8.setEnabled(false);
          jComboBox2.setSelectedIndex(0);
          jComboBox2.setEnabled(false);
            }
        else{
            jLabel8.setEnabled(true);
            jComboBox2.setEnabled(true);
            }

    }//GEN-LAST:event_jComboBoxCritereActionPerformed

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed

    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened

        String dateValue = "01-01-1999";
        java.util.Date date = null;
        try {
            date = new SimpleDateFormat("dd-MM-yyyy").parse(dateValue);
        } catch (ParseException ex) {
            Logger.getLogger(Stat_f.class.getName()).log(Level.SEVERE, null, ex);
        }

jDateChooserVisible.setDate(date);

        UserDAO userDao =new UserDAO();
        //date
        java.util.Date d2 = userDao.DisplayMaxDate();
        java.util.Date d1=userDao.DisplayMinDate();
        jDateChooser1.setDate(d1);
        jDateChooser2.setDate(d2);
        jLabel22.setEnabled(false);
        jSpinnerVisible.setEnabled(false);
//article
        //nbr_partage
        ArticleDAO articleDao =new ArticleDAO();
        jSpinnerPartage1.setValue(articleDao.DisplayMaxOrMinInt("max(Partages)"));
        System.out.println(jSpinnerPartage1.getValue());
        jSpinnerPartage2.setValue(articleDao.DisplayMaxOrMinInt("min(Partages)"));
        //nbr_visite
        jSpinnerVisite1.setValue(articleDao.DisplayMaxOrMinInt("max(Vues)"));
        jSpinnerVisite2.setValue(articleDao.DisplayMaxOrMinInt("min(Vues)"));
//        //note
//        jSpinnerNote1.setValue(0);
//        jSpinnerNote2.setValue(10);


        Set monHashSet=new HashSet();
        monHashSet=userDao.DisplayNationalite();
        Iterator i=monHashSet.iterator(); // on cr√©e un Iterator pour parcourir notre HashSet
        jComboBox2.removeAllItems();
        jComboBox2.addItem("...Choisir nationalite...");
        while(i.hasNext()) // tant qu'on a un suivant
        {
         jComboBox2.addItem(i.next());
        }

    }//GEN-LAST:event_formWindowOpened

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        if(jComboBoxCritere.getSelectedIndex()==0){
            JOptionPane.showMessageDialog(null,"Il faut choisir un crit√©re principale!!","Avertissement...",JOptionPane.WARNING_MESSAGE);
            return;

        }

        //sexe
        String sexe="";
        if(jRadioButton1.isSelected())
            sexe="*sexe = '1'";
        else if (jRadioButton2.isSelected())
            sexe="*sexe = '0'";
        //nationalite
        String nationalite="";
        if(jComboBox2.getSelectedIndex()==0){
            nationalite="";
        }
        else
        {
             nationalite="*nationalite like "+"'"+jComboBox2.getSelectedItem().toString()+"'";
        }
        //date de naissance
        Date d1,d2;
        d1=new Date(jDateChooser1.getDate().getTime());
        d2=new Date(jDateChooser2.getDate().getTime());

        String StringDate="*date_de_naissance between '"+d1+"' and '"+d2+"'";

        //

       if(!strSimUser.equals("")){

           if(!strPed.equals(""))
               strPed=strPed.replace("*", " or ");
           if(!strAdm.equals(""))
               strAdm=strAdm.replace("*", " or ");
           if(!strForum.equals(""))
               strForum=strForum.replace("*", " or ");
       }

       if(!strPed.equals("")){
           if(!strAdm.equals(""))
               strAdm=strAdm.replace("*", " or ");
           if(!strForum.equals(""))
               strForum=strForum.replace("*", " or ");
       }
       if(!strAdm.equals("")){
           if(!strForum.equals(""))
           strForum=strForum.replace("*", " or ");
       }
        String req=strSimUser+strPed+strAdm+strForum+sexe+nationalite+StringDate;
        req=req.replace("*", " and ");
       req=req.replaceFirst(" and ", " ");
        if(req.length()!=0)
         {
             req="where"+req;

         }

        System.out.println("***");
        System.out.println(req);

        if(jComboBoxCritere.getSelectedIndex()==1){
            
                     
                     UserDAO userdao=new UserDAO();
                     List<User> listeuser = userdao.DisplayAllUsers(req);
                     int pediatre=0, admin=0, parent=0, forum=0;

                     for( User u : listeuser){


                         if ((u.getType().toLowerCase()).equals("admin"))
                             admin++;
                         else if((u.getType().toLowerCase()).equals("pediatre"))
                             pediatre++;
                         else if((u.getType().toLowerCase()).equals("parent"))
                             parent++;
                         else if((u.getType().toLowerCase()).equals("forum"))
                             forum++;
                     }

                    DefaultPieDataset pieDataset=new DefaultPieDataset();
                    if((admin==0)&&(pediatre==0)&&(parent==0)){
                      JOptionPane.showMessageDialog(null,"Pas de donn√©es");
                        return;
                    }
                    if(admin!=0)
                    pieDataset.setValue("Administrateur", admin);
                    if(pediatre!=0)
                    pieDataset.setValue("Pediatre",pediatre);
                    if(parent!=0)
                    pieDataset.setValue("Parent",parent);
                    if(forum!=0)
                    pieDataset.setValue("Administrateur forum",forum);

                    JFreeChart chart= ChartFactory.createPieChart3D("Statistiques selon le type des utilisateurs", pieDataset, true, true, true);
                    Plot p=chart.getPlot();
                    //p.setForegroundAlpha(busyIconIndex);
                    ChartFrame frame=new ChartFrame("Statistique des utilisateurs", chart);

                    int selectedOption = JOptionPane.showConfirmDialog(null,
                                  "Tu veux enregistrer le graphique?", "Choose", JOptionPane.YES_NO_OPTION);
                    if (selectedOption == JOptionPane.YES_OPTION) {
                        try {
                            final ChartRenderingInfo info =new ChartRenderingInfo(new StandardEntityCollection());
                            final File file1=new File("chart.png");
                            ChartUtilities.saveChartAsPNG(file1, chart, 600, 500);
                        } catch (Exception e) {
                        }
                    }
                    frame.setVisible(true);
                    frame.setSize(450, 500);


        //refrechement des variables
                     strSimUser="";
                     strPed="";
                     strAdm="";
                     strForum="";
                     jCheckBox1.setSelected(false);
                     jCheckBox2.setSelected(false);
                     jCheckBox3.setSelected(false);
                     jCheckBox4.setSelected(false);
                     jRadioButton3.setSelected(true);
                     sexe="";
                     nationalite="";
                     StringDate="";
                     UserDAO userDao = new UserDAO();
                     java.util.Date da2 = userDao.DisplayMaxDate();
                     java.util.Date da1=userDao.DisplayMinDate();
                     jDateChooser1.setDate(da1);
                     jDateChooser2.setDate(da2);


        }

        if(jComboBoxCritere.getSelectedIndex()==3){


            UserDAO userdao=new UserDAO();
                     List<User> listeuser = userdao.DisplayAllUsers(req);
                     int homme=0, femme=0;

                     for( User u : listeuser){


                         if (u.isSexe())
                             homme++;
                         else
                             femme++;
                     }
                    if((homme==0)&&(femme==0)){
                      JOptionPane.showMessageDialog(null,"Pas de donn√©es");
                      return;
                       }
                    DefaultPieDataset pieDataset=new DefaultPieDataset();
                    if (homme!=0)
                    pieDataset.setValue("Homme", homme);
                    if(femme!=0)
                    pieDataset.setValue("Femme",femme);

                    JFreeChart chart= ChartFactory.createPieChart3D("Statistique selon le sexe", pieDataset, true, true, true);
                    Plot p=chart.getPlot();
                    //p.setForegroundAlpha(busyIconIndex);
                    ChartFrame frame=new ChartFrame("Statistique des utilisateurs", chart);

                    int selectedOption = JOptionPane.showConfirmDialog(null,
                                  "Tu veux enregistrer le graphique?", "Choose", JOptionPane.YES_NO_OPTION);
                    if (selectedOption == JOptionPane.YES_OPTION) {
                        try {
                            final ChartRenderingInfo info =new ChartRenderingInfo(new StandardEntityCollection());
                            final File file1=new File("chart.png");
                            ChartUtilities.saveChartAsPNG(file1, chart, 600, 500);
                        } catch (Exception e) {
                        }
                    }
                    frame.setVisible(true);
                    frame.setSize(450, 500);

        //refrechement des variables
                     strSimUser="";
                     strPed="";
                     strAdm="";
                     strForum="";
                     jCheckBox1.setSelected(false);
                     jCheckBox2.setSelected(false);
                     jCheckBox3.setSelected(false);
                     jCheckBox4.setSelected(false);
                     jRadioButton3.setSelected(true);
                     sexe="";
                     nationalite="";
                     StringDate="";
                     UserDAO userDao = new UserDAO();
                     java.util.Date da2 = userDao.DisplayMaxDate();
                     java.util.Date da1=userDao.DisplayMinDate();
                     jDateChooser1.setDate(da1);
                     jDateChooser2.setDate(da2);


        }
        //Date de naissance
         if(jComboBoxCritere.getSelectedIndex()==2){

             if(jDateChooserVisible.getDate().getTime()==0){
            JOptionPane.showMessageDialog(null,"Il faut choisir un crit√©re principale!!","Avertissement...",JOptionPane.WARNING_MESSAGE);
            return;

        }

         UserDAO userdao=new UserDAO();
          List<User> listeuser = userdao.DisplayAllUsers(req);
         int avant=0;
         int apres =0;
         //SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        	//java.util.Date dat1 = null;
                Date dateVi;
                  dateVi=new Date(jDateChooserVisible.getDate().getTime());
//             try {
//                 dat1 = sdf.parse("2000-01-01");
//             } catch (ParseException ex) {
//                 Logger.getLogger(Stat_f.class.getName()).log(Level.SEVERE, null, ex);
//             }
         for( User u : listeuser){

                         if ((u.getDateNaissance().compareTo(dateVi)<=0))
                             avant++;
                         else
                             apres++;
                     }
                    if((avant==0)&&(apres==0)){
                      JOptionPane.showMessageDialog(null,"Pas de donn√©es");
                      return;
                       }
                    DefaultPieDataset pieDataset=new DefaultPieDataset();
                    if(avant!=0)
                    pieDataset.setValue("Avant l'ann√©e "+dateVi, avant);
                    if(apres!=0)
                    pieDataset.setValue("Apr√© l'ann√©e "+dateVi,apres);

                    JFreeChart chart= ChartFactory.createPieChart3D("Statistique selon la date de naissance", pieDataset, true, true, true);
                    Plot p=chart.getPlot();
                    //p.setForegroundAlpha(busyIconIndex);
                    ChartFrame frame=new ChartFrame("Statistique des utilisateurs", chart);
                    int selectedOption = JOptionPane.showConfirmDialog(null,
                                  "Tu veux enregistrer le graphique?", "Choose", JOptionPane.YES_NO_OPTION);
                    if (selectedOption == JOptionPane.YES_OPTION) {
                        try {
                            final ChartRenderingInfo info =new ChartRenderingInfo(new StandardEntityCollection());
                            final File file1=new File("chart.png");
                            ChartUtilities.saveChartAsPNG(file1, chart, 600, 500);
                        } catch (Exception e) {
                        }
                    }
                    frame.setVisible(true);
                    frame.setSize(450, 500);

        //refrechement des variables
                     strSimUser="";
                     strPed="";
                     strAdm="";
                     strForum="";
                     jCheckBox1.setSelected(false);
                     jCheckBox2.setSelected(false);
                     jCheckBox3.setSelected(false);
                     jCheckBox4.setSelected(false);
                     jRadioButton3.setSelected(true);
                     sexe="";
                     nationalite="";
                     StringDate="";
                     UserDAO userDao = new UserDAO();
                     java.util.Date da2 = userDao.DisplayMaxDate();
                     java.util.Date da1=userDao.DisplayMinDate();
                     jDateChooser1.setDate(da1);
                     jDateChooser2.setDate(da2);


         }
        if(jComboBoxCritere.getSelectedIndex()==4){


              UserDAO userdao=new UserDAO();

                    Set monHashSet=new HashSet();
                     monHashSet=userdao.DisplayNationalite();
                     List<User> listeuser = userdao.DisplayAllUsers(req);

                     Iterator i=monHashSet.iterator(); // on cr√©e un Iterator pour parcourir notre HashSet
                     int comp=0;
                     String s="";
                     DefaultPieDataset pieDataset=new DefaultPieDataset();
                     boolean vide=true;
                   while(i.hasNext()){
                      s=i.next().toString();
                         //System.out.println("*"+ s);
                         for(User u : listeuser){
                            if(u.getNationalite().equals(s))
                            {
                               comp++;
                            }
                        }
                       //System.out.println(comp);
                         if(comp!=0){
                         pieDataset.setValue(s, comp);
                         vide=false;
                         }
                       comp=0;
                   }
                    if(vide){
                      JOptionPane.showMessageDialog(null,"Pas de donn√©es");
                      return;
                       }
                    JFreeChart chart= ChartFactory.createPieChart3D("Statistique selon la nationalit√©", pieDataset, true, true, true);
                    Plot p=chart.getPlot();
                    //p.setForegroundAlpha(busyIconIndex);
                    ChartFrame frame=new ChartFrame("Statistique des utilisateurs", chart);
                    int selectedOption = JOptionPane.showConfirmDialog(null,
                                  "Tu veux enregistrer le graphique?", "Choose", JOptionPane.YES_NO_OPTION);
                    if (selectedOption == JOptionPane.YES_OPTION) {
                        try {
                            final ChartRenderingInfo info =new ChartRenderingInfo(new StandardEntityCollection());
                            final File file1=new File("chart.png");
                            ChartUtilities.saveChartAsPNG(file1, chart, 600, 500);
                        } catch (Exception e) {
                        }
                    }
                    frame.setVisible(true);
                    frame.setSize(450, 500);


        }

        //refrechement des variables
                     strSimUser="";
                     strPed="";
                     strAdm="";
                     strForum="";
                     jCheckBox1.setSelected(false);
                     jCheckBox2.setSelected(false);
                     jCheckBox3.setSelected(false);
                     jCheckBox4.setSelected(false);
                     jRadioButton3.setSelected(true);
                     sexe="";
                     nationalite="";
                     StringDate="";
                     UserDAO userDao = new UserDAO();
                     java.util.Date da2 = userDao.DisplayMaxDate();
                     java.util.Date da1=userDao.DisplayMinDate();
                     jDateChooser1.setDate(da1);
                     jDateChooser2.setDate(da2);


    }//GEN-LAST:event_jButton1ActionPerformed

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
       if (jCheckBox1.isSelected())
          strSimUser="*Type like 'parent'";
       else
           strSimUser="";
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void jCheckBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox2ActionPerformed
        if (jCheckBox2.isSelected())
          strAdm="*Type like 'admin'";
       else
           strAdm="";
    }//GEN-LAST:event_jCheckBox2ActionPerformed

    private void jCheckBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox3ActionPerformed
        if (jCheckBox3.isSelected())
          strPed="*Type like 'pediatre'";
       else
           strPed="";
    }//GEN-LAST:event_jCheckBox3ActionPerformed

    private void jRadioButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton3ActionPerformed

    }//GEN-LAST:event_jRadioButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        if(jComboBoxArticle.getSelectedIndex()==0){
            JOptionPane.showMessageDialog(null,"Il faut choisir un crit√©re principale!!","Avertissement...",JOptionPane.WARNING_MESSAGE);
            return;

        }




        String p2= jSpinnerPartage1.getValue().toString();
        String p1= jSpinnerPartage2.getValue().toString();
        if(p1.compareTo("0") <0 || p2.compareTo("0") <0 || Integer.parseInt(p2) < Integer.parseInt(p1)){
            JOptionPane.showMessageDialog(null,"Le nombre de partage n'est pas valide!!","Avertissement...",JOptionPane.WARNING_MESSAGE);
            return;
        }
        String nbr_partageS="";
        nbr_partageS="*Partages between '"+p1+"' and '"+p2+"'";
         //visite
        String v1=jSpinnerVisite2.getValue().toString();
        String v2=jSpinnerVisite1.getValue().toString();
        
       if(v1.compareTo("0") <0 || v2.compareTo("0") <0 || Integer.parseInt(v2) < Integer.parseInt(v1)){
            JOptionPane.showMessageDialog(null,"Le nombre de visite ne peut pas √©tre n√©gative!!","Avertissement...",JOptionPane.WARNING_MESSAGE);
            return;
        }
       String nbr_visiteS="*Vues between '"+v1+"' and '"+v2+"'";
 
        String req=nbr_partageS+nbr_visiteS;
        req=req.replace("*", " and ");
       req=req.replaceFirst(" and ", " ");
        if(req.length()!=0)
         {
             req=" where"+req;

         }
        System.out.println(req);
        //note
         if(jComboBoxArticle.getSelectedIndex()==3){


             ArticleDAO articleDao=new ArticleDAO();
             List<Integer> listearticle = articleDao.getListEvaluationArticle(req);
             int nonEvaluer=0, mauvais=0,faible=0, bien=0, tbien=0, passable=0;
             for( Integer i : listearticle){
                         if (i<2)
                             mauvais++;
                         else if(i<4)
                             faible++;
                         else if (i<6)
                             passable++;
                         else if(i<9)
                             bien++;
                         else if(i==10)
                             tbien++;
                         else nonEvaluer++;
                     
             }
                    DefaultPieDataset pieDataset=new DefaultPieDataset();
                     if((faible==0)&&(passable==0)&&(bien==0)&&(tbien==0)&&(nonEvaluer==0)){
                      JOptionPane.showMessageDialog(null,"Pas de donn√©es");
                       // rafrechir
                        jSpinnerPartage1.setValue(articleDao.DisplayMaxOrMinInt("max(nbr_partage)"));
                        jSpinnerPartage2.setValue(articleDao.DisplayMaxOrMinInt("min(nbr_partage)"));
                                //nbr_visite
                        jSpinnerVisite1.setValue(articleDao.DisplayMaxOrMinInt("max(nbr_visite)"));
                        jSpinnerVisite2.setValue(articleDao.DisplayMaxOrMinInt("min(nbr_visite)"));
                        return;
                    }
                     if(nonEvaluer!=0)
                    pieDataset.setValue("Non √©valu√©",nonEvaluer);
                     if(faible!=0)
                    pieDataset.setValue("Faible", faible);
                     if(passable!=0)
                    pieDataset.setValue("Passable",passable);
                     if(bien!=0)
                    pieDataset.setValue("Bien",bien);
                     if(tbien!=0)
                    pieDataset.setValue("Tr√©s bien",tbien);

                    JFreeChart chart= ChartFactory.createPieChart3D("Statistique selon la note des articles", pieDataset, true, true, true);
                    Plot p=chart.getPlot();
                    //p.setForegroundAlpha(busyIconIndex);
                    ChartFrame frame=new ChartFrame("Statistique des articles", chart);
                    int selectedOption = JOptionPane.showConfirmDialog(null,
                                  "Tu veux enregistrer le graphique?", "Choose", JOptionPane.YES_NO_OPTION);
                    if (selectedOption == JOptionPane.YES_OPTION) {
                        try {
                            final ChartRenderingInfo info =new ChartRenderingInfo(new StandardEntityCollection());
                            final File file1=new File("chart.png");
                            ChartUtilities.saveChartAsPNG(file1, chart, 600, 500);
                        } catch (Exception e) {
                        }
                    }
                    frame.setVisible(true);
                    frame.setSize(450, 500);
                    return;

         }
//-------------------       
        //variable de separation
         int z=Integer.parseInt(jSpinnerVisible.getValue().toString());
         if(z<=0){
            JOptionPane.showMessageDialog(null,"La valeur de s√©paration doit √©tre superieur √† 0 !!!","Avertissement...",JOptionPane.WARNING_MESSAGE);
            jLabel22.setForeground(Color.ORANGE);
            return;

        }

         if(jComboBoxArticle.getSelectedIndex()==1){

             String a1 = jSpinnerPartage1.getValue().toString();
             String a2 = jSpinnerPartage2.getValue().toString();
             ArticleDAO articleDao=new ArticleDAO();
             List<Article> listearticle = articleDao.displayAllArticle(req);
             int inf=0,sup=0;
             for( Article u : listearticle){

                         if (u.getNbr_partage()<z)
                             inf++;
                         else
                             sup++;
                     }

                    if((inf==0)&&(sup==0)){
                            JOptionPane.showMessageDialog(null,"Pas de donn√©es");
                              return;
                          }
                    DefaultPieDataset pieDataset=new DefaultPieDataset();
                    if(inf!=0)
                    pieDataset.setValue("Inferieur √† "+z, inf);
                    if(sup!=0)
                    pieDataset.setValue("Superieur √† "+z,sup);

                    JFreeChart chart= ChartFactory.createPieChart3D("Statistique selon le nombre de partage", pieDataset, true, true, true);
                    Plot p=chart.getPlot();
                    //p.setForegroundAlpha(busyIconIndex);
                    ChartFrame frame=new ChartFrame("Statistique des articles", chart);
                   int selectedOption = JOptionPane.showConfirmDialog(null,
                                  "Tu veux enregistrer le graphique?", "Choose", JOptionPane.YES_NO_OPTION);
                    if (selectedOption == JOptionPane.YES_OPTION) {
                        try {
                            final ChartRenderingInfo info =new ChartRenderingInfo(new StandardEntityCollection());
                            final File file1=new File("chart.png");
                            ChartUtilities.saveChartAsPNG(file1, chart, 600, 500);
                        } catch (Exception e) {
                        }
                    }
                    frame.setVisible(true);
                    frame.setSize(450, 500);

    }//GEN-LAST:event_jButton2ActionPerformed

         if(jComboBoxArticle.getSelectedIndex()==2){
             String a1 = jSpinnerVisite1.getValue().toString();
             String a2 = jSpinnerVisite2.getValue().toString();

         ArticleDAO articleDao=new ArticleDAO();
             List<Article> listearticle = articleDao.displayAllArticle(req);
             int inf=0,sup=0;
             for( Article u : listearticle){

                         if (u.getNbLecture()<z)
                             inf++;
                         else
                             sup++;
                     }

                    DefaultPieDataset pieDataset=new DefaultPieDataset();
                     if((inf==0)&&(sup==0)){
                      JOptionPane.showMessageDialog(null,"Pas de donn√©es");
                        return;
                    }
                    if(inf!=0)
                    pieDataset.setValue("Inferieur √† "+z, inf);
                    if(sup!=0)
                    pieDataset.setValue("Superieur √† "+z,sup);

                    JFreeChart chart= ChartFactory.createPieChart3D("Statistique selon le nombre de vue", pieDataset, true, true, true);
                    Plot p=chart.getPlot();
                    //p.setForegroundAlpha(busyIconIndex);
                    ChartFrame frame=new ChartFrame("Statistique des articles", chart);
                    int selectedOption = JOptionPane.showConfirmDialog(null,
                                  "Tu veux enregistrer le graphique?", "Choose", JOptionPane.YES_NO_OPTION);
                    if (selectedOption == JOptionPane.YES_OPTION) {
                        try {
                            final ChartRenderingInfo info =new ChartRenderingInfo(new StandardEntityCollection());
                            final File file1=new File("chart.png");
                            ChartUtilities.saveChartAsPNG(file1, chart, 600, 500);
                        } catch (Exception e) {
                        }
                    }
                    frame.setVisible(true);
                    frame.setSize(450, 500);

    }
        



    }
    private void jComboBoxArticleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxArticleActionPerformed

        if(jComboBoxArticle.getSelectedIndex()==0)
        {
           
            jLabel22.setEnabled(false);
            jSpinnerVisible.setEnabled(false);
        }
        else {
            jLabel22.setEnabled(true);
            jSpinnerVisible.setEnabled(true);
        }
            

        if(jComboBoxArticle.getSelectedIndex()==1){

             
//           jPanelVisible.setVisible(true);
            }
         else{
            jPanel15.setVisible(true);
            }
        if(jComboBoxArticle.getSelectedIndex()==2){
//          jPanelVisible.setVisible(true);
//           jPanel14.setVisible(false);
            }
         else{
//            jPanel14.setVisible(true);
            }
        if(jComboBoxArticle.getSelectedIndex()==3){
//          jPanelVisible.setVisible(false);
//           jPanel13.setVisible(false);
             jLabel22.setEnabled(false);
            jSpinnerVisible.setEnabled(false);
            }
         else{
//            jPanel13.setVisible(true);
             jLabel22.setEnabled(true);
            jSpinnerVisible.setEnabled(true);
            }
    }//GEN-LAST:event_jComboBoxArticleActionPerformed

    private void jSpinnerVisibleStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinnerVisibleStateChanged
        int z=Integer.parseInt(jSpinnerVisible.getValue().toString());
//       if(z<=0)
//            jPanelVisible.setBackground(Color.orange);
//            else jPanelVisible.setBackground(Color.lightGray);


    }//GEN-LAST:event_jSpinnerVisibleStateChanged

    private void jCheckBox4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox4ActionPerformed
       if (jCheckBox4.isSelected())
          strForum="*Type like 'forum'";
       else
           strForum="";
    
    }//GEN-LAST:event_jCheckBox4ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        String system_lf = UIManager.getSystemLookAndFeelClassName().toLowerCase();
        if(system_lf.contains("metal")){
            try {
                UIManager.setLookAndFeel("com.sun.java.swing.plaf.nimbus.NimbusLookAndFeel");
                }catch (Exception e) {}
        }else{
            try {
                UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
            }catch (Exception e) {}
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Stat_f().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private com.toedter.calendar.JCalendar jCalendar1;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JCheckBox jCheckBox3;
    private javax.swing.JCheckBox jCheckBox4;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JComboBox jComboBoxArticle;
    private javax.swing.JComboBox jComboBoxCritere;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private com.toedter.calendar.JDateChooser jDateChooser2;
    private com.toedter.calendar.JDateChooser jDateChooserVisible;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JRadioButton jRadioButton3;
    private javax.swing.JSpinner jSpinnerPartage1;
    private javax.swing.JSpinner jSpinnerPartage2;
    private javax.swing.JSpinner jSpinnerVisible;
    private javax.swing.JSpinner jSpinnerVisite1;
    private javax.swing.JSpinner jSpinnerVisite2;
    // End of variables declaration//GEN-END:variables
}
