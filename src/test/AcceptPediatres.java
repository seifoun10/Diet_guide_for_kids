/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * AcceptPediatres.java
 *
 * Created on 1 mars 2014, 19:42:34
 */
package test;

import gestionpediatre.*;
import dao.PediatreDAO;
import entities.Pediatre;
import javax.swing.JDialog;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;

/**
 *
 * @author Killer
 */
public class AcceptPediatres extends javax.swing.JPanel {
    AcceptPediatresTableModel pediatresTM;
    SimpleDateFormat formater = new SimpleDateFormat("dd/MM/yyyy");

    /** Creates new form AcceptPediatres */
    public AcceptPediatres() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        reinitializeButton = new javax.swing.JButton();
        selectionnePanel = new javax.swing.JPanel();
        dateNaissanceLabel = new javax.swing.JLabel();
        emailLabel = new javax.swing.JLabel();
        loginLabel = new javax.swing.JLabel();
        nomLabel = new javax.swing.JLabel();
        prenomLabel = new javax.swing.JLabel();
        nationaliteLabel = new javax.swing.JLabel();
        sexeLabel = new javax.swing.JLabel();
        dateInscriptionLabel = new javax.swing.JLabel();
        logLab = new javax.swing.JLabel();
        nomLab = new javax.swing.JLabel();
        preLab = new javax.swing.JLabel();
        emaLab = new javax.swing.JLabel();
        daNLab = new javax.swing.JLabel();
        daILab = new javax.swing.JLabel();
        natLab = new javax.swing.JLabel();
        sexLab = new javax.swing.JLabel();
        adrLab = new javax.swing.JLabel();
        telLab = new javax.swing.JLabel();
        adresseLabel = new javax.swing.JLabel();
        telephoneLabel = new javax.swing.JLabel();
        refuserButton = new javax.swing.JButton();
        accepterButton = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        listePediatresTable = new javax.swing.JTable();
        statesCount = new javax.swing.JLabel();
        refreshButton = new javax.swing.JButton();
        docsButton = new javax.swing.JButton();
        contactButton = new javax.swing.JButton();
        validerButton = new javax.swing.JButton();

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(gestionpediatre.GestionPediatreApp.class).getContext().getResourceMap(AcceptPediatres.class);
        setBackground(resourceMap.getColor("Form.background")); // NOI18N
        setName("Form"); // NOI18N

        reinitializeButton.setText(resourceMap.getString("reinitializeButton.text")); // NOI18N
        reinitializeButton.setEnabled(false);
        reinitializeButton.setName("reinitializeButton"); // NOI18N
        reinitializeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reinitializeButtonreinitializeOnClick(evt);
            }
        });

        selectionnePanel.setBackground(resourceMap.getColor("selectionnePanel.background")); // NOI18N
        selectionnePanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Pédiatre selectionné"));
        selectionnePanel.setEnabled(false);
        selectionnePanel.setName("selectionnePanel"); // NOI18N

        dateNaissanceLabel.setText(resourceMap.getString("dateNaissanceLabel.text")); // NOI18N
        dateNaissanceLabel.setEnabled(false);
        dateNaissanceLabel.setName("dateNaissanceLabel"); // NOI18N

        emailLabel.setText(resourceMap.getString("emailLabel.text")); // NOI18N
        emailLabel.setEnabled(false);
        emailLabel.setName("emailLabel"); // NOI18N

        loginLabel.setText(resourceMap.getString("loginLabel.text")); // NOI18N
        loginLabel.setEnabled(false);
        loginLabel.setName("loginLabel"); // NOI18N

        nomLabel.setText(resourceMap.getString("nomLabel.text")); // NOI18N
        nomLabel.setEnabled(false);
        nomLabel.setName("nomLabel"); // NOI18N

        prenomLabel.setText(resourceMap.getString("prenomLabel.text")); // NOI18N
        prenomLabel.setEnabled(false);
        prenomLabel.setName("prenomLabel"); // NOI18N

        nationaliteLabel.setText(resourceMap.getString("nationaliteLabel.text")); // NOI18N
        nationaliteLabel.setEnabled(false);
        nationaliteLabel.setName("nationaliteLabel"); // NOI18N

        sexeLabel.setText(resourceMap.getString("sexeLabel.text")); // NOI18N
        sexeLabel.setEnabled(false);
        sexeLabel.setName("sexeLabel"); // NOI18N

        dateInscriptionLabel.setText(resourceMap.getString("dateInscriptionLabel.text")); // NOI18N
        dateInscriptionLabel.setEnabled(false);
        dateInscriptionLabel.setName("dateInscriptionLabel"); // NOI18N

        logLab.setFont(resourceMap.getFont("logLab.font")); // NOI18N
        logLab.setText(resourceMap.getString("logLab.text")); // NOI18N
        logLab.setEnabled(false);
        logLab.setName("logLab"); // NOI18N

        nomLab.setFont(resourceMap.getFont("nomLab.font")); // NOI18N
        nomLab.setText(resourceMap.getString("nomLab.text")); // NOI18N
        nomLab.setEnabled(false);
        nomLab.setName("nomLab"); // NOI18N

        preLab.setFont(resourceMap.getFont("preLab.font")); // NOI18N
        preLab.setText(resourceMap.getString("preLab.text")); // NOI18N
        preLab.setEnabled(false);
        preLab.setName("preLab"); // NOI18N

        emaLab.setFont(resourceMap.getFont("emaLab.font")); // NOI18N
        emaLab.setText(resourceMap.getString("emaLab.text")); // NOI18N
        emaLab.setEnabled(false);
        emaLab.setName("emaLab"); // NOI18N

        daNLab.setFont(resourceMap.getFont("daNLab.font")); // NOI18N
        daNLab.setText(resourceMap.getString("daNLab.text")); // NOI18N
        daNLab.setEnabled(false);
        daNLab.setName("daNLab"); // NOI18N

        daILab.setFont(resourceMap.getFont("daILab.font")); // NOI18N
        daILab.setText(resourceMap.getString("daILab.text")); // NOI18N
        daILab.setEnabled(false);
        daILab.setName("daILab"); // NOI18N

        natLab.setFont(resourceMap.getFont("natLab.font")); // NOI18N
        natLab.setText(resourceMap.getString("natLab.text")); // NOI18N
        natLab.setEnabled(false);
        natLab.setName("natLab"); // NOI18N

        sexLab.setFont(resourceMap.getFont("sexLab.font")); // NOI18N
        sexLab.setText(resourceMap.getString("sexLab.text")); // NOI18N
        sexLab.setEnabled(false);
        sexLab.setName("sexLab"); // NOI18N

        adrLab.setFont(resourceMap.getFont("adrLab.font")); // NOI18N
        adrLab.setText(resourceMap.getString("adrLab.text")); // NOI18N
        adrLab.setEnabled(false);
        adrLab.setName("adrLab"); // NOI18N

        telLab.setFont(resourceMap.getFont("telLab.font")); // NOI18N
        telLab.setText(resourceMap.getString("telLab.text")); // NOI18N
        telLab.setEnabled(false);
        telLab.setName("telLab"); // NOI18N

        adresseLabel.setText(resourceMap.getString("adresseLabel.text")); // NOI18N
        adresseLabel.setEnabled(false);
        adresseLabel.setName("adresseLabel"); // NOI18N

        telephoneLabel.setText(resourceMap.getString("telephoneLabel.text")); // NOI18N
        telephoneLabel.setEnabled(false);
        telephoneLabel.setName("telephoneLabel"); // NOI18N

        javax.swing.GroupLayout selectionnePanelLayout = new javax.swing.GroupLayout(selectionnePanel);
        selectionnePanel.setLayout(selectionnePanelLayout);
        selectionnePanelLayout.setHorizontalGroup(
            selectionnePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(selectionnePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(selectionnePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(logLab)
                    .addComponent(nomLab)
                    .addComponent(preLab)
                    .addComponent(emaLab)
                    .addComponent(daNLab)
                    .addComponent(daILab)
                    .addComponent(natLab)
                    .addComponent(sexLab)
                    .addComponent(adrLab)
                    .addComponent(telLab))
                .addGap(18, 18, 18)
                .addGroup(selectionnePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(telephoneLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(adresseLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(sexeLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(nationaliteLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(dateInscriptionLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(dateNaissanceLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(emailLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(prenomLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(nomLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(loginLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        selectionnePanelLayout.setVerticalGroup(
            selectionnePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(selectionnePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(selectionnePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(selectionnePanelLayout.createSequentialGroup()
                        .addComponent(logLab)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nomLab)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(preLab)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(emaLab)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(daNLab)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(daILab)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(natLab)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(sexLab)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(adrLab)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(telLab))
                    .addGroup(selectionnePanelLayout.createSequentialGroup()
                        .addComponent(loginLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nomLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(prenomLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(emailLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dateNaissanceLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dateInscriptionLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nationaliteLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(sexeLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(adresseLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(telephoneLabel)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        refuserButton.setText(resourceMap.getString("refuserButton.text")); // NOI18N
        refuserButton.setEnabled(false);
        refuserButton.setName("refuserButton"); // NOI18N
        refuserButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refuserButtonrefuseOnClick(evt);
            }
        });

        accepterButton.setText(resourceMap.getString("accepterButton.text")); // NOI18N
        accepterButton.setEnabled(false);
        accepterButton.setName("accepterButton"); // NOI18N
        accepterButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                accepterButtonacceptOnClick(evt);
            }
        });

        jPanel2.setBackground(resourceMap.getColor("jPanel2.background")); // NOI18N
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Liste des demandes d'ajouts des pédiatres"));
        jPanel2.setName("jPanel2"); // NOI18N

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        listePediatresTable.setAutoCreateRowSorter(true);
        listePediatresTable.setModel(pediatresTM = new gestionpediatre.AcceptPediatresTableModel(listePediatresTable));
        listePediatresTable.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        listePediatresTable.setName("listePediatresTable"); // NOI18N
        listePediatresTable.getTableHeader().setReorderingAllowed(false);
        listePediatresTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                listePediatresTablemouseSelection(evt);
            }
        });
        listePediatresTable.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                listePediatresTablemouseDragSelection(evt);
            }
        });
        listePediatresTable.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                listePediatresTablekeySelection(evt);
            }
        });
        jScrollPane1.setViewportView(listePediatresTable);

        statesCount.setText(pediatresTM.countAccepted()
            +" accepté(s) et "
            + pediatresTM.countRefused()
            + " refusé(s) sur "
            + listePediatresTable.getRowCount());
        statesCount.setName("statesCount"); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 645, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(statesCount))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 214, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(statesCount)
                .addContainerGap())
        );

        refreshButton.setText(resourceMap.getString("refreshButton.text")); // NOI18N
        refreshButton.setName("refreshButton"); // NOI18N
        refreshButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshButtonrefreshOnClick(evt);
            }
        });

        docsButton.setText(resourceMap.getString("docsButton.text")); // NOI18N
        docsButton.setEnabled(false);
        docsButton.setName("docsButton"); // NOI18N
        docsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                docsButtondocConsultOnClick(evt);
            }
        });

        contactButton.setText(resourceMap.getString("contactButton.text")); // NOI18N
        contactButton.setEnabled(false);
        contactButton.setName("contactButton"); // NOI18N
        contactButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                contactButtoncontactOnClick(evt);
            }
        });

        validerButton.setText(resourceMap.getString("validerButton.text")); // NOI18N
        validerButton.setEnabled(false);
        validerButton.setName("validerButton"); // NOI18N
        validerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                validerButtonvalidateOnClick(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(refreshButton, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(validerButton, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(reinitializeButton)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(refuserButton)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(accepterButton))
                        .addComponent(selectionnePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(contactButton)
                    .addComponent(docsButton))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(selectionnePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(contactButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(docsButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(accepterButton)
                            .addComponent(refuserButton)
                            .addComponent(reinitializeButton)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(validerButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(refreshButton)))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

private void validerButtonvalidateOnClick(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_validerButtonvalidateOnClick
    if(pediatresTM.countAccepted() == 0 && pediatresTM.countRefused() == 0){
        JOptionPane.showMessageDialog(
                null,
                "Aucune demande traitée.",
                "Confirmer la validation",
                JOptionPane.INFORMATION_MESSAGE);
    }
    else{
        int response = JOptionPane.showConfirmDialog(
                null,
                "Vous venez d'accepter "
                + pediatresTM.countAccepted()
                + " et refuser "
                + pediatresTM.countRefused()
                + " demande(s) d'ajout(s) de pédiatre(s)."
                + "\nVoulez-vous continuer ?",
                "Confirmer la validation",
                JOptionPane.YES_NO_OPTION,
                JOptionPane.QUESTION_MESSAGE);
        if (response == JOptionPane.YES_OPTION){
            validateTreatment();
            refreshTable();
            countStates();
            enableDisable();
        }
    }
}//GEN-LAST:event_validerButtonvalidateOnClick

private void reinitializeButtonreinitializeOnClick(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reinitializeButtonreinitializeOnClick
    setState("Non traitée");
    countStates();
    enableDisable();
    listePediatresTable.requestFocusInWindow();
}//GEN-LAST:event_reinitializeButtonreinitializeOnClick

private void refuserButtonrefuseOnClick(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refuserButtonrefuseOnClick
    setState("Refusée");
    countStates();
    enableDisable();
    listePediatresTable.requestFocusInWindow();
}//GEN-LAST:event_refuserButtonrefuseOnClick

private void accepterButtonacceptOnClick(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_accepterButtonacceptOnClick
    setState("Acceptée");
    countStates();
    enableDisable();
    listePediatresTable.requestFocusInWindow();
}//GEN-LAST:event_accepterButtonacceptOnClick

private void contactButtoncontactOnClick(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_contactButtoncontactOnClick
// TODO add your handling code here:
}//GEN-LAST:event_contactButtoncontactOnClick

private void listePediatresTablemouseSelection(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listePediatresTablemouseSelection
    enableDisable();
}//GEN-LAST:event_listePediatresTablemouseSelection

private void listePediatresTablemouseDragSelection(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listePediatresTablemouseDragSelection
    enableDisable();
}//GEN-LAST:event_listePediatresTablemouseDragSelection

private void listePediatresTablekeySelection(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_listePediatresTablekeySelection
    enableDisable();
}//GEN-LAST:event_listePediatresTablekeySelection

private void refreshButtonrefreshOnClick(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshButtonrefreshOnClick
    int response = JOptionPane.showConfirmDialog(
            null,
            "Voulez-vous vraiment rafraîchir la liste ?",
            "Confirmation du rafraîchissement",
            JOptionPane.YES_NO_OPTION,
            JOptionPane.QUESTION_MESSAGE);
    if (response == JOptionPane.YES_OPTION){
        refreshTable();
        countStates();
        enableDisable();
    }
}//GEN-LAST:event_refreshButtonrefreshOnClick

private void docsButtondocConsultOnClick(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_docsButtondocConsultOnClick
// TODO add your handling code here:
    
}//GEN-LAST:event_docsButtondocConsultOnClick

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton accepterButton;
    private javax.swing.JLabel adrLab;
    private javax.swing.JLabel adresseLabel;
    private javax.swing.JButton contactButton;
    private javax.swing.JLabel daILab;
    private javax.swing.JLabel daNLab;
    private javax.swing.JLabel dateInscriptionLabel;
    private javax.swing.JLabel dateNaissanceLabel;
    private javax.swing.JButton docsButton;
    private javax.swing.JLabel emaLab;
    private javax.swing.JLabel emailLabel;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable listePediatresTable;
    private javax.swing.JLabel logLab;
    private javax.swing.JLabel loginLabel;
    private javax.swing.JLabel natLab;
    private javax.swing.JLabel nationaliteLabel;
    private javax.swing.JLabel nomLab;
    private javax.swing.JLabel nomLabel;
    private javax.swing.JLabel preLab;
    private javax.swing.JLabel prenomLabel;
    private javax.swing.JButton refreshButton;
    private javax.swing.JButton refuserButton;
    private javax.swing.JButton reinitializeButton;
    private javax.swing.JPanel selectionnePanel;
    private javax.swing.JLabel sexLab;
    private javax.swing.JLabel sexeLabel;
    private javax.swing.JLabel statesCount;
    private javax.swing.JLabel telLab;
    private javax.swing.JLabel telephoneLabel;
    private javax.swing.JButton validerButton;
    // End of variables declaration//GEN-END:variables
    

    private JDialog aboutBox;
    
    public javax.swing.JTable getListePediatresTable(){
        return listePediatresTable;
    }
    
    public void fillLabel(String login){
        //remplissement des labels par les infos du pédiatre selectionné
        Pediatre pediatre = pediatresTM.getPediatre(login);
        
        loginLabel.setText(pediatre.getLogin());
        nomLabel.setText(pediatre.getNom());
        prenomLabel.setText(pediatre.getPrenom());
        emailLabel.setText(pediatre.getEmail());
        dateNaissanceLabel.setText(formater.format(pediatre.getDateNaissance()));
        dateInscriptionLabel.setText(formater.format(pediatre.getDateInscription()));
        nationaliteLabel.setText(pediatre.getNationalite());
        sexeLabel.setText(pediatre.isSexe()?"Homme":"Femme");
        adresseLabel.setText(pediatre.getAdresse());
        telephoneLabel.setText(pediatre.getTelephone());
    }
    
    public void refreshTable(){
        //rafraichissement de la table : population via la base
        listePediatresTable.setModel(new AcceptPediatresTableModel(listePediatresTable));
        pediatresTM = (AcceptPediatresTableModel) listePediatresTable.getModel();
    }
    
    public void validateTreatment(){
        //parcours de la table et validation des traitements
        for(int i=0; i<listePediatresTable.getRowCount(); i++){
            if(listePediatresTable.getValueAt(i, 4).equals("Acceptée"))
                PediatreDAO.acceptPediatre((String)listePediatresTable.getValueAt(i, 0));
            if(listePediatresTable.getValueAt(i, 4).equals("Refusée"))
                PediatreDAO.deletePediatre((String)listePediatresTable.getValueAt(i, 0));
        }
    }
    
    private void enableDisable(){
        //si un pédiatre est selectionné des boutons sont enabled, sinon en disabled
        if(listePediatresTable.getSelectedRow() >= 0){
            selectionnePanel.setEnabled(true);
            logLab.setEnabled(true);
            nomLab.setEnabled(true);
            preLab.setEnabled(true);
            emaLab.setEnabled(true);
            daNLab.setEnabled(true);
            daILab.setEnabled(true);
            natLab.setEnabled(true);
            sexLab.setEnabled(true);
            adrLab.setEnabled(true);
            telLab.setEnabled(true);

            loginLabel.setEnabled(true);
            nomLabel.setEnabled(true);
            prenomLabel.setEnabled(true);
            emailLabel.setEnabled(true);
            dateNaissanceLabel.setEnabled(true);
            dateInscriptionLabel.setEnabled(true);
            nationaliteLabel.setEnabled(true);
            sexeLabel.setEnabled(true);
            adresseLabel.setEnabled(true);
            telephoneLabel.setEnabled(true);

            //accepterButton
            if(!listePediatresTable.getValueAt(listePediatresTable.getSelectedRow(), 4).equals("Acceptée"))
                accepterButton.setEnabled(true);
            else
                accepterButton.setEnabled(false);
            
            //refuserButton
            if(!listePediatresTable.getValueAt(listePediatresTable.getSelectedRow(), 4).equals("Refusée"))
                refuserButton.setEnabled(true);
            else
                refuserButton.setEnabled(false);
            
            //reinitializeButton
            if(!listePediatresTable.getValueAt(listePediatresTable.getSelectedRow(), 4).equals("Non traitée"))
                reinitializeButton.setEnabled(true);
            else
                reinitializeButton.setEnabled(false);
            
            contactButton.setEnabled(true);
            docsButton.setEnabled(true);

            fillLabel(listePediatresTable.getValueAt(listePediatresTable.getSelectedRow(), 0).toString());
        }
        else{
            selectionnePanel.setEnabled(false);
            logLab.setEnabled(false);
            nomLab.setEnabled(false);
            preLab.setEnabled(false);
            emaLab.setEnabled(false);
            daNLab.setEnabled(false);
            daILab.setEnabled(false);
            natLab.setEnabled(false);
            sexLab.setEnabled(false);
            adrLab.setEnabled(false);
            telLab.setEnabled(false);

            loginLabel.setEnabled(false);
            nomLabel.setEnabled(false);
            prenomLabel.setEnabled(false);
            emailLabel.setEnabled(false);
            dateNaissanceLabel.setEnabled(false);
            dateInscriptionLabel.setEnabled(false);
            nationaliteLabel.setEnabled(false);
            sexeLabel.setEnabled(false);
            adresseLabel.setEnabled(false);
            telephoneLabel.setEnabled(false);

            accepterButton.setEnabled(false);
            refuserButton.setEnabled(false);
            reinitializeButton.setEnabled(false);
            contactButton.setEnabled(false);
            docsButton.setEnabled(false);
            
            loginLabel.setText("-");
            nomLabel.setText("-");
            prenomLabel.setText("-");
            emailLabel.setText("-");
            dateNaissanceLabel.setText("-");
            dateInscriptionLabel.setText("-");
            nationaliteLabel.setText("-");
            sexeLabel.setText("-");
            adresseLabel.setText("-");
            telephoneLabel.setText("-");
        }
        
        //si au moin un des pédiatres est refusée ou accepté le bouton d'acceptation se met en enabled
        if((pediatresTM.countAccepted()+pediatresTM.countRefused()) == 0)
            validerButton.setEnabled(false);
        else
            validerButton.setEnabled(true);
    }
    
    private void setState(String state){
        //mettre à jour l'état de la demande (appelé dans les listener des boutons
        for(int i=0; i<4; i++)
            listePediatresTable.setValueAt(listePediatresTable.getValueAt(listePediatresTable.getSelectedRow(), i), listePediatresTable.getSelectedRow(), i);        
        listePediatresTable.setValueAt(state, listePediatresTable.getSelectedRow(), 4);
    }
    
    private void countStates(){
        //affecte le nombre des demandes acceptées et le nombre des demandes refusées au label affiché sous la table
        statesCount.setText(pediatresTM.countAccepted() +" acceptée(s) et "
                + pediatresTM.countRefused() + " refusée(s) sur "
                + listePediatresTable.getRowCount());
    }
    
    public String getInfo(){
        if(listePediatresTable.getSelectedRow() < 0)
            return null;
        return (String) listePediatresTable.getValueAt(listePediatresTable.getSelectedRow(), 4);
    }
}

